{"ast":null,"code":"var _jsxFileName = \"/Users/irenepaul/Documents/GitHub/Just-Because/Just Because/src/BackgroundSlideshow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CUBE_SIZE = 3; // 3x3x3 cube\nconst CARD_COUNT = CUBE_SIZE * CUBE_SIZE * CUBE_SIZE;\nconst CARD_DIMENSION = 150; // Size of each card in pixels\nconst CUBE_GAP = 50; // Gap between cards\n\nexport default function BackgroundSlideshow({\n  images\n}) {\n  _s();\n  const controls = useAnimation();\n  const [cardData, setCardData] = useState([]);\n  const imageIndexRef = useRef(0);\n  useEffect(() => {\n    const initialCardData = Array.from({\n      length: CARD_COUNT\n    }, (_, i) => ({\n      id: i,\n      image: images[imageIndexRef.current++ % images.length]\n    }));\n    setCardData(initialCardData);\n    const rotateCube = async () => {\n      while (true) {\n        await controls.start({\n          rotateX: Math.random() * 360,\n          rotateY: Math.random() * 360,\n          transition: {\n            duration: 5,\n            ease: 'easeInOut'\n          }\n        });\n      }\n    };\n    rotateCube();\n  }, [images, controls]);\n  const getCardPosition = index => {\n    const x = index % CUBE_SIZE - Math.floor(CUBE_SIZE / 2);\n    const y = Math.floor(index % (CUBE_SIZE * CUBE_SIZE) / CUBE_SIZE) - Math.floor(CUBE_SIZE / 2);\n    const z = Math.floor(index / (CUBE_SIZE * CUBE_SIZE)) - Math.floor(CUBE_SIZE / 2);\n    const offset = CARD_DIMENSION + CUBE_GAP;\n    return {\n      x: x * offset,\n      y: y * offset,\n      z: z * offset\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 z-0 overflow-hidden bg-gray-900 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"relative\",\n      style: {\n        width: CARD_DIMENSION,\n        height: CARD_DIMENSION,\n        transformStyle: 'preserve-3d'\n      },\n      animate: controls,\n      children: cardData.map((card, index) => {\n        const {\n          x,\n          y,\n          z\n        } = getCardPosition(index);\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"absolute bg-white rounded-lg shadow-lg flex items-center justify-center p-2\",\n          style: {\n            width: CARD_DIMENSION,\n            height: CARD_DIMENSION,\n            transform: `translate3d(${x}px, ${y}px, ${z}px)`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: \"Slideshow Card\",\n            className: \"w-full h-full object-cover rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black opacity-50 z-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundSlideshow, \"VlQBEzrNG6TvvYjkTIke4dg804E=\", false, function () {\n  return [useAnimation];\n});\n_c = BackgroundSlideshow;\nvar _c;\n$RefreshReg$(_c, \"BackgroundSlideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","useAnimation","jsxDEV","_jsxDEV","CUBE_SIZE","CARD_COUNT","CARD_DIMENSION","CUBE_GAP","BackgroundSlideshow","images","_s","controls","cardData","setCardData","imageIndexRef","initialCardData","Array","from","length","_","i","id","image","current","rotateCube","start","rotateX","Math","random","rotateY","transition","duration","ease","getCardPosition","index","x","floor","y","z","offset","className","children","div","style","width","height","transformStyle","animate","map","card","transform","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irenepaul/Documents/GitHub/Just-Because/Just Because/src/BackgroundSlideshow.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\n\ninterface BackgroundSlideshowProps {\n  images: string[];\n}\n\nconst CUBE_SIZE = 3; // 3x3x3 cube\nconst CARD_COUNT = CUBE_SIZE * CUBE_SIZE * CUBE_SIZE;\nconst CARD_DIMENSION = 150; // Size of each card in pixels\nconst CUBE_GAP = 50; // Gap between cards\n\nexport default function BackgroundSlideshow({ images }: BackgroundSlideshowProps) {\n  const controls = useAnimation();\n  const [cardData, setCardData] = useState<Array<{ id: number; image: string }>>([]);\n  const imageIndexRef = useRef(0);\n\n  useEffect(() => {\n    const initialCardData = Array.from({ length: CARD_COUNT }, (_, i) => ({\n      id: i,\n      image: images[imageIndexRef.current++ % images.length],\n    }));\n    setCardData(initialCardData);\n\n    const rotateCube = async () => {\n      while (true) {\n        await controls.start({\n          rotateX: Math.random() * 360,\n          rotateY: Math.random() * 360,\n          transition: { duration: 5, ease: 'easeInOut' },\n        });\n      }\n    };\n\n    rotateCube();\n  }, [images, controls]);\n\n  const getCardPosition = (index: number) => {\n    const x = (index % CUBE_SIZE) - Math.floor(CUBE_SIZE / 2);\n    const y = Math.floor((index % (CUBE_SIZE * CUBE_SIZE)) / CUBE_SIZE) - Math.floor(CUBE_SIZE / 2);\n    const z = Math.floor(index / (CUBE_SIZE * CUBE_SIZE)) - Math.floor(CUBE_SIZE / 2);\n    const offset = (CARD_DIMENSION + CUBE_GAP);\n    return {\n      x: x * offset,\n      y: y * offset,\n      z: z * offset,\n    };\n  };\n\n  return (\n    <div className=\"absolute inset-0 z-0 overflow-hidden bg-gray-900 flex items-center justify-center\">\n      <motion.div\n        className=\"relative\"\n        style={{\n          width: CARD_DIMENSION,\n          height: CARD_DIMENSION,\n          transformStyle: 'preserve-3d',\n        }}\n        animate={controls}\n      >\n        {cardData.map((card, index) => {\n          const { x, y, z } = getCardPosition(index);\n          return (\n            <motion.div\n              key={card.id}\n              className=\"absolute bg-white rounded-lg shadow-lg flex items-center justify-center p-2\"\n              style={{\n                width: CARD_DIMENSION,\n                height: CARD_DIMENSION,\n                transform: `translate3d(${x}px, ${y}px, ${z}px)`,\n              }}\n            >\n              <img src={card.image} alt=\"Slideshow Card\" className=\"w-full h-full object-cover rounded-md\" />\n            </motion.div>\n          );\n        })}\n      </motion.div>\n      <div className=\"absolute inset-0 bg-black opacity-50 z-10\"></div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}