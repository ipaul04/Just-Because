{"ast":null,"code":"import _objectSpread from\"/Users/irenepaul/Just Because/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import LoginPage from'./LoginPage';import HomePage from'./HomePage';import SurveyPage from'./SurveyPage';import WelcomePage from'./WelcomePage';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){const[page,setPage]=useState('welcome');const[user,setUser]=useState(null);const[surveyData,setSurveyData]=useState([]);const[cart,setCart]=useState([]);const handleLogin=e=>{e.preventDefault();const form=e.target;const username=form.elements.namedItem('username').value;const password=form.elements.namedItem('password').value;if(username&&password){setUser({username});setPage('survey');// Changed from 'home' to 'survey'\n}};const handleLogout=()=>{setUser(null);setPage('login');};const handleSurveySubmit=(e,setNotification)=>{const form=new FormData(e.target);const data=Object.fromEntries(form.entries());const newEntry=_objectSpread(_objectSpread({},data),{},{id:Date.now()});// Add unique ID\nsetSurveyData(prev=>[...prev,newEntry]);setNotification('Thank you for submitting the survey!');setTimeout(()=>setNotification(''),3000);// Clear notification after 3 seconds\nsetPage('home');// Navigate to home page after survey submission\n};const handleAddToCart=product=>{setCart(prevCart=>[...prevCart,product]);console.log('Added to cart:',product.name);};return/*#__PURE__*/_jsx(_Fragment,{children:(()=>{switch(page){case'welcome':return/*#__PURE__*/_jsx(WelcomePage,{setPage:setPage});case'login':return/*#__PURE__*/_jsx(LoginPage,{handleLogin:handleLogin});case'home':return/*#__PURE__*/_jsx(HomePage,{user:user,setPage:setPage,handleLogout:handleLogout,onAddToCart:handleAddToCart});case'survey':return/*#__PURE__*/_jsx(SurveyPage,{handleSurveySubmit:handleSurveySubmit,surveyData:surveyData,setPage:setPage});default:return/*#__PURE__*/_jsx(LoginPage,{handleLogin:handleLogin});}})()});}","map":{"version":3,"names":["React","useState","LoginPage","HomePage","SurveyPage","WelcomePage","jsx","_jsx","Fragment","_Fragment","App","page","setPage","user","setUser","surveyData","setSurveyData","cart","setCart","handleLogin","e","preventDefault","form","target","username","elements","namedItem","value","password","handleLogout","handleSurveySubmit","setNotification","FormData","data","Object","fromEntries","entries","newEntry","_objectSpread","id","Date","now","prev","setTimeout","handleAddToCart","product","prevCart","console","log","name","children","onAddToCart"],"sources":["/Users/irenepaul/Just Because/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport SurveyPage from './SurveyPage';\nimport WelcomePage from './WelcomePage';\n\ninterface User {\n  username: string;\n}\n\ninterface SurveyEntry {\n  id: number;\n  feeling: string;\n  smile: string;\n  message?: string;\n}\n\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  image: string;\n}\n\ninterface LoginPageProps {\n  handleLogin: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\ninterface HomePageProps {\n  user: User | null;\n  setPage: (pageName: string) => void;\n  handleLogout: () => void;\n  onAddToCart: (product: Product) => void;\n}\n\ninterface SurveyPageProps {\n  handleSurveySubmit: (e: React.FormEvent<HTMLFormElement>, setNotification: (message: string) => void) => void;\n  surveyData: SurveyEntry[];\n  setPage: (pageName: string) => void;\n}\n\nexport default function App() {\n  const [page, setPage] = useState('welcome');\n  const [user, setUser] = useState<User | null>(null);\n  const [surveyData, setSurveyData] = useState<SurveyEntry[]>([]);\n  const [cart, setCart] = useState<Product[]>([]);\n\n  const handleLogin = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const username = (form.elements.namedItem('username') as HTMLInputElement).value;\n    const password = (form.elements.namedItem('password') as HTMLInputElement).value;\n    if (username && password) {\n      setUser({ username });\n      setPage('survey'); // Changed from 'home' to 'survey'\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setPage('login');\n  };\n\n  const handleSurveySubmit = (e: React.FormEvent<HTMLFormElement>, setNotification: (message: string) => void) => {\n    const form = new FormData(e.target as HTMLFormElement);\n    const data = Object.fromEntries(form.entries()) as Omit<SurveyEntry, 'id'>;\n    const newEntry: SurveyEntry = { ...data, id: Date.now() }; // Add unique ID\n    setSurveyData((prev) => [...prev, newEntry]);\n    setNotification('Thank you for submitting the survey!');\n    setTimeout(() => setNotification(''), 3000); // Clear notification after 3 seconds\n    setPage('home'); // Navigate to home page after survey submission\n  };\n\n  const handleAddToCart = (product: Product) => {\n    setCart((prevCart) => [...prevCart, product]);\n    console.log('Added to cart:', product.name);\n  };\n\n  return (\n    <>{\n      (() => {\n        switch (page) {\n          case 'welcome':\n            return <WelcomePage setPage={setPage} />;\n          case 'login':\n            return <LoginPage handleLogin={handleLogin} />;\n          case 'home':\n            return <HomePage user={user} setPage={setPage} handleLogout={handleLogout} onAddToCart={handleAddToCart} />;\n          case 'survey':\n            return <SurveyPage handleSurveySubmit={handleSurveySubmit} surveyData={surveyData} setPage={setPage} />;\n          default:\n            return <LoginPage handleLogin={handleLogin} />;\n        }\n      })()\n    }</>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}