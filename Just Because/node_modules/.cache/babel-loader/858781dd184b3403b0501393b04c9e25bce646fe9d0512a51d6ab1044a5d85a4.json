{"ast":null,"code":"var _jsxFileName = \"/Users/irenepaul/Just Because/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport SurveyPage from './SurveyPage';\nimport WelcomePage from './WelcomePage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [page, setPage] = useState('welcome');\n  const [user, setUser] = useState(null);\n  const [surveyData, setSurveyData] = useState([]);\n  const handleLogin = e => {\n    e.preventDefault();\n    const form = e.target;\n    const username = form.elements.namedItem('username').value;\n    const password = form.elements.namedItem('password').value;\n    if (username && password) {\n      setUser({\n        username\n      });\n      setPage('home');\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setPage('login');\n  };\n  const handleSurveySubmit = (e, setNotification) => {\n    const form = new FormData(e.target);\n    const data = Object.fromEntries(form.entries());\n    const newEntry = {\n      ...data,\n      id: Date.now()\n    }; // Add unique ID\n    setSurveyData(prev => [...prev, newEntry]);\n    setNotification('Thank you for submitting the survey!');\n    setTimeout(() => setNotification(''), 3000); // Clear notification after 3 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (() => {\n      switch (page) {\n        case 'welcome':\n          return /*#__PURE__*/_jsxDEV(WelcomePage, {\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this);\n        case 'login':\n          return /*#__PURE__*/_jsxDEV(LoginPage, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this);\n        case 'home':\n          return /*#__PURE__*/_jsxDEV(HomePage, {\n            user: user,\n            setPage: setPage,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }, this);\n        case 'survey':\n          return /*#__PURE__*/_jsxDEV(SurveyPage, {\n            handleSurveySubmit: handleSurveySubmit,\n            surveyData: surveyData,\n            setPage: setPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 20\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(LoginPage, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 20\n          }, this);\n      }\n    })()\n  }, void 0, false);\n}\n_s(App, \"dDwJwOdhb8WBM3SihGrJ1wx55dc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoginPage","HomePage","SurveyPage","WelcomePage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","page","setPage","user","setUser","surveyData","setSurveyData","handleLogin","e","preventDefault","form","target","username","elements","namedItem","value","password","handleLogout","handleSurveySubmit","setNotification","FormData","data","Object","fromEntries","entries","newEntry","id","Date","now","prev","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irenepaul/Just Because/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport SurveyPage from './SurveyPage';\nimport WelcomePage from './WelcomePage';\n\ninterface User {\n  username: string;\n}\n\ninterface SurveyEntry {\n  id: number;\n  feeling: string;\n  smile: string;\n  message?: string;\n}\n\ninterface LoginPageProps {\n  handleLogin: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\ninterface HomePageProps {\n  user: User | null;\n  setPage: (pageName: string) => void;\n  handleLogout: () => void;\n}\n\ninterface SurveyPageProps {\n  handleSurveySubmit: (e: React.FormEvent<HTMLFormElement>, setNotification: (message: string) => void) => void;\n  surveyData: SurveyEntry[];\n  setPage: (pageName: string) => void;\n}\n\nexport default function App() {\n  const [page, setPage] = useState('welcome');\n  const [user, setUser] = useState<User | null>(null);\n  const [surveyData, setSurveyData] = useState<SurveyEntry[]>([]);\n\n  const handleLogin = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const username = (form.elements.namedItem('username') as HTMLInputElement).value;\n    const password = (form.elements.namedItem('password') as HTMLInputElement).value;\n    if (username && password) {\n      setUser({ username });\n      setPage('home');\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setPage('login');\n  };\n\n  const handleSurveySubmit = (e: React.FormEvent<HTMLFormElement>, setNotification: (message: string) => void) => {\n    const form = new FormData(e.target as HTMLFormElement);\n    const data = Object.fromEntries(form.entries()) as Omit<SurveyEntry, 'id'>;\n    const newEntry: SurveyEntry = { ...data, id: Date.now() }; // Add unique ID\n    setSurveyData((prev) => [...prev, newEntry]);\n    setNotification('Thank you for submitting the survey!');\n    setTimeout(() => setNotification(''), 3000); // Clear notification after 3 seconds\n  };\n\n  return (\n    <>{\n      (() => {\n        switch (page) {\n          case 'welcome':\n            return <WelcomePage setPage={setPage} />;\n          case 'login':\n            return <LoginPage handleLogin={handleLogin} />;\n          case 'home':\n            return <HomePage user={user} setPage={setPage} handleLogout={handleLogout} />;\n          case 'survey':\n            return <SurveyPage handleSurveySubmit={handleSurveySubmit} surveyData={surveyData} setPage={setPage} />;\n          default:\n            return <LoginPage handleLogin={handleLogin} />;\n        }\n      })()\n    }</>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}